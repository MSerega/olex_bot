from datetime import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text

from db.db_connect import get_horoscope
from loader import dp
from keyboards import default as kb
from settings import functions


class FSM_horoscope(StatesGroup):
    horoscope = State()
    prevision = State()


@dp.message_handler(text="‚ôè –ì–æ—Ä–æ—Å–∫–æ–ø", chat_type=types.ChatType.PRIVATE, state="*")
async def cmd_horoscope(message: types.Message):
    await functions.userInDb(message)
    await FSM_horoscope.horoscope.set()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –∑–Ω–∞–∫ –∑–æ–¥—ñ–∞–∫–∞",
                         reply_markup=kb.zodiacs,
                         disable_notification=True)


@dp.message_handler(Text(equals="üëàÔ∏è –ù–∞–∑–∞–¥"), state=FSM_horoscope)
async def back_state(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    state_ = current_state.split(':')[1]
    if state_ == 'prevision':
        await FSM_horoscope.horoscope.set()
        await message.answer("–û–±–µ—Ä—ñ—Ç—å –∑–Ω–∞–∫ –∑–æ–¥—ñ–∞–∫–∞", reply_markup=kb.zodiacs)
    elif state_ == 'horoscope':
        if current_state is None:
            return
        await state.finish()
        await message.answer("–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é. –û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é", reply_markup=kb.main_menu)


@dp.message_handler(Text(equals=['‚ôà –û–≤–µ–Ω', '‚ôâ –¢—ñ–ª–µ—Ü—å', '‚ôä –ë–ª–∏–∑–Ω—é–∫–∏', '‚ôã –†–∞–∫', '‚ôå –õ–µ–≤', '‚ôç –î—ñ–≤–∞', '‚ôé –¢–µ—Ä–µ–∑–∏',
                                 '‚ôè –°–∫–æ—Ä–ø—ñ–æ–Ω', '‚ôê –°—Ç—Ä—ñ–ª–µ—Ü—å', '‚ôë –ö–æ–∑–µ—Ä—ñ–≥', '‚ôí –í–æ–¥–æ–ª—ñ–π', '‚ôì –†–∏–±–∏']),
                    state=FSM_horoscope.horoscope)
async def zodiacs(message: types.Message, state: FSMContext):
    if '‚ôà –û–≤–µ–Ω' == message.text:
        oven = get_horoscope('–û–≤–µ–Ω')
        await message.answer(f"‚ôà –û–≤–µ–Ω, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{oven}",
                             reply_markup=kb.back_btn)
    elif '‚ôâ –¢—ñ–ª–µ—Ü—å' == message.text:
        await message.answer(f"‚ôâ –¢—ñ–ª–µ—Ü—å, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–¢–µ–ª–µ—Ü—å')}",
                             reply_markup=kb.back_btn)
    elif '‚ôä –ë–ª–∏–∑–Ω—é–∫–∏' == message.text:
        await message.answer(f"‚ôä –ë–ª–∏–∑–Ω—é–∫–∏, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–ë–ª–∏–∑–Ω—é–∫—ñ')}",
                             reply_markup=kb.back_btn)
    elif '‚ôã –†–∞–∫' == message.text:
        await message.answer(f"‚ôã –†–∞–∫, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–†–∞–∫')}",
                             reply_markup=kb.back_btn)
    elif '‚ôå –õ–µ–≤' == message.text:
        await message.answer(f"‚ôå –õ–µ–≤, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–õ–µ–≤')}",
                             reply_markup=kb.back_btn)
    elif '‚ôç –î—ñ–≤–∞' == message.text:
        await message.answer(f"‚ôç –î—ñ–≤–∞, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–î–µ–≤–∞')}",
                             reply_markup=kb.back_btn)
    elif '‚ôé –¢–µ—Ä–µ–∑–∏' == message.text:
        await message.answer(f"‚ôé –¢–µ—Ä–µ–∑–∏, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–¢–µ—Ä–µ–∑–∏')}",
                             reply_markup=kb.back_btn)
    elif '‚ôè –°–∫–æ—Ä–ø—ñ–æ–Ω' == message.text:
        await message.answer(f"‚ôè –°–∫–æ—Ä–ø—ñ–æ–Ω, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–°–∫–æ—Ä–ø—ñ–æ–Ω')}",
                             reply_markup=kb.back_btn)
    elif '‚ôê –°—Ç—Ä—ñ–ª–µ—Ü—å' == message.text:
        await message.answer(f"‚ôê –°—Ç—Ä—ñ–ª–µ—Ü—å, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–°—Ç—Ä–µ–ª–µ—Ü—å')}",
                             reply_markup=kb.back_btn)
    elif '‚ôë –ö–æ–∑–µ—Ä—ñ–≥' == message.text:
        await message.answer(f"‚ôë –ö–æ–∑–µ—Ä—ñ–≥, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–ö–æ–∑–µ—Ä–æ–≥')}",
                             reply_markup=kb.back_btn)
    elif '‚ôí –í–æ–¥–æ–ª—ñ–π' == message.text:
        await message.answer(f"‚ôí –í–æ–¥–æ–ª—ñ–π, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–í–æ–¥–æ–ª–µ–π')}",
                             reply_markup=kb.back_btn)
    elif '‚ôì –†–∏–±–∏' == message.text:
        await message.answer(f"‚ôì –†–∏–±–∏, –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ {datetime.now().strftime('%d.%m.%Y')}\n{get_horoscope('–†–∏–±–∏')}",
                             reply_markup=kb.back_btn)
    await FSM_horoscope.prevision.set()
