from datetime import datetime

import requests
from bs4 import BeautifulSoup

from settings.config import SINOPTIK


def get_weather():
    # —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ —è–∫–∏—Ö –±—É–¥–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏—Å—å –ø–∞—Ä—Å–∏–Ω–≥
    url_sinoptik = SINOPTIK

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–µ—è–∫–∏—Ö —Å–∞–π—Ç—ñ–≤
    headers = {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0'
    }

    # –í–∏—Ç—è–≥—É—î–º–æ html –∫–æ–¥ —Å—Ç–æ—Ä—ñ–Ω–æ–∫
    response_sinoptik = requests.get(url_sinoptik, headers=headers)
    soup_sinoptik = BeautifulSoup(response_sinoptik.content, 'lxml')

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Ç–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –Ω–∞–∑–≤ –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è —Ç–∞ –º—ñ—Å—è—Ü—ñ–≤
    uk_weekdays = {
        'Monday': '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫',
        'Tuesday': '–í—ñ–≤—Ç–æ—Ä–æ–∫',
        'Wednesday': '–°–µ—Ä–µ–¥–∞',
        'Thursday': '–ß–µ—Ç–≤–µ—Ä',
        'Friday': '–ü\'—è—Ç–Ω–∏—Ü—è',
        'Saturday': '–°—É–±–æ—Ç–∞',
        'Sunday': '–ù–µ–¥—ñ–ª—è'
    }

    uk_months = {
        'January': '—Å—ñ—á–Ω—è',
        'February': '–ª—é—Ç–æ–≥–æ',
        'March': '–±–µ—Ä–µ–∑–Ω—è',
        'April': '–∫–≤—ñ—Ç–Ω—è',
        'May': '—Ç—Ä–∞–≤–Ω—è',
        'June': '—á–µ—Ä–≤–Ω—è',
        'July': '–ª–∏–ø–Ω—è',
        'August': '—Å–µ—Ä–ø–Ω—è',
        'September': '–≤–µ—Ä–µ—Å–Ω—è',
        'October': '–∂–æ–≤—Ç–Ω—è',
        'November': '–ª–∏—Å—Ç–æ–ø–∞–¥–∞',
        'December': '–≥—Ä—É–¥–Ω—è'
    }

    current_date = datetime.now()
    weekday_name = current_date.strftime("%A")
    month_name = current_date.strftime("%B")
    uk_weekday_name = uk_weekdays.get(weekday_name, weekday_name)
    uk_month_name = uk_months.get(month_name, month_name)
    today_date = f"{current_date.day} {uk_month_name} {current_date.year} —Ä–æ–∫—É"

    # –ü–∞—Ä—Å–∏–º–æ –æ–ø–∏—Å –ø–æ–≥–æ–¥–∏
    description = [item.text.strip() for item in soup_sinoptik.find_all('div', class_='description')]
    if len(description) == 4:
        desc = description[2]
        people_weather = description[3].replace('–ù–∞—Ä–æ–¥–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏: ', '')
    elif len(description) == 3:
        desc = description[1]
        people_weather = description[2].replace('–ù–∞—Ä–æ–¥–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏: ', '')
    else:
        desc = description[0]
        people_weather = description[1].replace('–ù–∞—Ä–æ–¥–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏: ', '')

    # –ü–∞—Ä—Å–∏–º–æ c—Ö—ñ–¥ —Ç–∞ –∑–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è
    time_weather = soup_sinoptik.find('div', class_='infoDaylight').text
    time_tokens = time_weather.split()
    sunrise_time = time_tokens[1]
    sunset_time = time_tokens[3]

    # –ü–∞—Ä—Å–∏–º–æ —á–∞—Å—É –∑–∞—Ö–æ–¥—É —ñ —Å—Ö–æ–¥—É —Å–æ–Ω—Ü—è
    times_day = []
    for item in soup_sinoptik.select('.infoDaylight > span'):
        times_day += item

    weather_table = soup_sinoptik.select_one('.weatherDetails')

    if weather_table:
        rows = weather_table.select('tbody tr')

        if rows:
            # –ü–∞—Ä—Å–∏–Ω–≥ —á–∞—Å—É, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏, –≤—ñ–¥—á—É—Ç—Ç—è —è–∫, —Ç–∏—Å–∫—É, –≤–æ–ª–æ–≥–æ—Å—Ç—ñ, –≤—ñ—Ç—Ä—É —Ç–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ –æ–ø–∞–¥—ñ–≤
            times = [td.get_text(strip=True) for td in rows[0].select('td')]
            weather_descriptions = [td.find('div')['title'] for td in rows[1].select('td')]
            temperatures = [td.get_text(strip=True) for td in rows[2].select('td')]
            feels_like = [td.get_text(strip=True) for td in rows[3].select('td')]
            pressures = [td.get_text(strip=True) for td in rows[4].select('td')]
            humidity = [td.get_text(strip=True) for td in rows[5].select('td')]
            winds = [td.get_text(strip=True) for td in rows[6].select('td')]
            precipitation_chances = [td.get_text(strip=True) if td.get_text(strip=True) != '-' else '0' for td in rows[7].select('td')]


            # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
            result = (f"üìÖ {uk_weekday_name} {today_date} \n"
                      f"{desc}\n\n"
                      "–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–≥–æ–¥—É\n"
                      f"üåÖ C—Ö—ñ–¥ —Å–æ–Ω—Ü—è: {sunrise_time}\n"
                      f"üåÑ –ó–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è: {sunset_time}\n\n"
                      + "\n".join(['-' * 50 +
                                   f"\nüïù –ß–∞—Å: {times[i]}\n"
                                   f"üóæ –ù–∞ –Ω–µ–±—ñ: {weather_descriptions[i]}\n"
                                   f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperatures[i]} ¬∞C\n"
                                   f"üå° –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {feels_like[i]}\n"
                                   f"üåè –¢–∏—Å–∫: {pressures[i]} –º–º.\n"
                                   f"üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity[i]}%\n"
                                   f"üåÅ –í—ñ—Ç–µ—Ä: {winds[i]} –º/—Å–µ–∫\n"
                                   f"üå® –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –æ–ø–∞–¥—ñ–≤: {precipitation_chances[i]} %"
                                   for i in range(len(times))]))

            print(result)
            return result
        else:
            return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ä—è–¥–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ."
    else:
        return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç–∞–±–ª–∏—Ü—é weatherDetails."
